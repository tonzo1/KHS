# Generated by Django 5.2.4 on 2025-07-17 01:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ImageModels",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(blank=True, max_length=255)),
                ("image", models.ImageField(upload_to="images/")),
                (
                    "uploaded_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Member",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "email",
                    models.EmailField(max_length=254, verbose_name="email address"),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        blank=True, max_length=10, unique=True, verbose_name="username"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="last name"
                    ),
                ),
                ("alt_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "phone",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be 8-15 digits, with optional + prefix",
                                regex="^\\+?[0-9]{8,15}$",
                            )
                        ],
                        verbose_name="phone number",
                    ),
                ),
                (
                    "address",
                    models.TextField(blank=True, null=True, verbose_name="address"),
                ),
                (
                    "payment_mode",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "order_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("renewal_date", models.DateField(blank=True, null=True)),
                (
                    "contact_point",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "membership_type",
                    models.CharField(
                        choices=[
                            ("S", "Single"),
                            ("D", "Double"),
                            ("L", "LifeTime"),
                            ("G", "Gardener"),
                        ],
                        default="S",
                        max_length=1,
                        verbose_name="membership type",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "membership_expiry",
                    models.DateField(
                        blank=True, null=True, verbose_name="membership expiry"
                    ),
                ),
                (
                    "profile_image",
                    models.ImageField(
                        blank=True,
                        help_text="Upload a profile picture for this member",
                        null=True,
                        upload_to="members/profile_images/",
                        verbose_name="profile image",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="notes"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MembershipHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "previous_type",
                    models.CharField(
                        choices=[
                            ("S", "Single"),
                            ("D", "Double"),
                            ("L", "LifeTime"),
                            ("G", "Gardener"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "new_type",
                    models.CharField(
                        choices=[
                            ("S", "Single"),
                            ("D", "Double"),
                            ("L", "LifeTime"),
                            ("G", "Gardener"),
                        ],
                        max_length=1,
                    ),
                ),
                ("change_date", models.DateTimeField(auto_now_add=True)),
                ("reason", models.TextField(blank=True, null=True)),
                (
                    "changed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="changed_memberships",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="membership_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Membership Histories",
                "ordering": ["-change_date"],
            },
        ),
    ]
